
EXPLANATION OF CODE:


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Product Filter</title>
    <style>
        body {
            font-family: sans-serif;
            margin: 20px;
        }
        .product-list {
            margin-top: 20px;
            border: 1px solid #ccc;
            padding: 10px;
            width: 300px;
        }
        .product-item {
            padding: 10px;
            border-bottom: 1px solid #eee;
        }
        .product-item:last-child {
            border-bottom: none; -------------------------------------------------------> CODE BLOCK
        }
    </style>
</head>
<body>
</body>
</html>


EXPLANATION OF CODE BLOCK:

<title> → Sets the browser tab title to Dynamic Product Filter.

<style> → Contains CSS styling for the page layout and product list. ---------------------------------------->EXPLANATION

.product-list → A box with border and padding to hold products.

.product-item → Defines each product block with spacing and divider lines.




<h1>Product List</h1>

<div class="filter-container">
    Filter by Category:
    <select id="category-filter">
        <option value="all">All</option>
        <option value="clothing">Clothing</option>
        <option value="electronics">Electronics</option>----------------------------------------------------> CODE BLOCK
        <option value="books">Books</option>
    </select>
</div>

<div id="product-container" class="product-list"></div>


EXPLANATION OF CODE BLOCK:

<h1> ---> Displays the page heading Product List.

<div class="filter-container"> ---> Holds the dropdown menu for category selection.------------------------------------->EXPLANATION

<select id="category-filter"> ---> A dropdown box to choose the product category.

<option> ---> Defines the available categories (All, Clothing, Electronics, Books).

<div id="product-container" class="product-list"> ----> A container where products will appear dynamically.



<script>
document.addEventListener('DOMContentLoaded', () => {
    const products = [
        { name: 'T-Shirt', category: 'clothing' },
        { name: 'Jeans', category: 'clothing' },
        { name: 'Headphones', category: 'electronics' },
        { name: 'Smartphone', category: 'electronics' },
        { name: 'Novel', category: 'books' },
        { name: 'Cookbook', category: 'books' }
    ];

    const categoryFilter = document.getElementById('category-filter');
    const productContainer = document.getElementById('product-container');-----------------------------------------------> CODE BLOCK

    const displayProducts = (productsToDisplay) => {
        productContainer.innerHTML = productsToDisplay
            .map(product => `<div class="product-item">${product.name}</div>`)
            .join('');
    };

    displayProducts(products);

    categoryFilter?.addEventListener('change', (e) => {
        const filtered = e.target.value === 'all' 
            ? products : products.filter(p => p.category === e.target.value);
        displayProducts(filtered);
    });
});
</script>



EXPLANATION OF CODE BLOCK:


<script> ---> Starts the JavaScript section.

document.addEventListener('DOMContentLoaded', ...) ----> Ensures code runs only after the page finishes loading.

const products = [...] ---> Array of product objects, each with a name and category.

const categoryFilter ----> References the <select> dropdown.

const productContainer -----> References the container where products will be displayed.----------------------------------------->EXPLANATION

const displayProducts = (...) => { ... } -----> Function that builds product <div> blocks and injects them into the container.

displayProducts(products) ----> Initially shows all products on page load.

categoryFilter.addEventListener('change', ...) ----> Listens for dropdown changes.

If All is selected ----> show all products.

Otherwise-----> filter and display only products of the chosen category.
