<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Library Management</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <div id="app-container">
    <h2>Library Management</h2>

    <input id="search-box" type="text" placeholder="Search by title or author">

    <div id="book-form">
      <input id="title-input" type="text" placeholder="New book title">
      <input id="author-input" type="text" placeholder="New book author">
      <button id="add-btn">Add Book</button>
    </div>

    <div id="book-list"></div>------------------------------------------------------------> CODE BLOCK
  </div>
  <script src="script.js"></script>
</body>
</html>




EXPLANATION OF CODE BLOCK:

<!DOCTYPE html> → Declares HTML5 document type.

<head> → Contains metadata, title, and CSS link.

<body> → Holds visible content.

#app-container → Main container box for the app.

<input id="search-box"> → Search bar to filter books.

#book-form → Contains input fields for title, author, and "Add Book" button.

#book-list → Empty container where the list of books will appear dynamically.

<script src="script.js"> → Links external JavaScript file for app logic.




/* style.css */
body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 20px;
  background: #f2f2f2;
}

#app-container {
  max-width: 600px;
  margin: 50px auto;
  padding: 20px;
  border: 1px solid #ccc;
  background: #fff;
}----------------------------------------------------------------------------> CODE BLOCK

h2 {
  text-align: center;
  margin-bottom: 20px;
}

p {
  margin: 10px 0;
}



EXPLANATION OF CODE BLOCK:

body → Adds background color, padding, and sets font style.

#app-container → White box centered on the page with border and padding.

h2 → Styles heading, centered with spacing.

p → Defines spacing for book entries.




/* script.js */
const books = [
  { title: "1984", author: "George Orwell" },
  { title: "The Great Gatsby", author: "F. Scott Fitzgerald" },
  { title: "To Kill a Mockingbird", author: "Harper Lee" }
];

const searchBox = document.getElementById("search-box");
const bookList = document.getElementById("book-list");
const addBtn = document.getElementById("add-btn");
const titleInput = document.getElementById("title-input");
const authorInput = document.getElementById("author-input");

function renderBooks(filteredBooks) {
  bookList.innerHTML = "";
  filteredBooks.forEach((book, index) => {
    const div = document.createElement("div");
    div.textContent = `${book.title} by ${book.author}`;
    const removeBtn = document.createElement("button");
    removeBtn.textContent = "Remove";
    removeBtn.onclick = () => {
      books.splice(index, 1);
      renderBooks(books);
    };
    div.appendChild(removeBtn);
    bookList.appendChild(div);--------------------------------> CODE BLOCK
  });
}

renderBooks(books);

searchBox.addEventListener("input", () => {
  const searchText = searchBox.value.toLowerCase();
  const filtered = books.filter(
    (b) =>
      b.title.toLowerCase().includes(searchText) ||
      b.author.toLowerCase().includes(searchText)
  );
  renderBooks(filtered);
});

addBtn.addEventListener("click", () => {
  const title = titleInput.value.trim();
  const author = authorInput.value.trim();
  if (title && author) {
    books.push({ title, author });
    renderBooks(books);
    titleInput.value = "";
    authorInput.value = "";
  }
});




EXPLANATION OF CODE BLOCK:

books → Initial list of sample books.

getElementById → Selects HTML elements for inputs, buttons, and list container.

renderBooks() → Clears list and re-displays current books with "Remove" button.

removeBtn.onclick → Removes a book from the array and re-renders the list.

searchBox.addEventListener("input") → Filters books live while typing.

addBtn.addEventListener("click") → Adds a new book to the list and refreshes display.